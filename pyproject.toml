[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "codex2api"
version = "0.2.0"
description = "Modern OpenAI compatible API powered by ChatGPT"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Codex2API Contributors", email = "contact@codex2api.dev"}
]
license = {text = "MIT"}
keywords = ["openai", "chatgpt", "api", "proxy", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "structlog>=23.2.0",
    "python-multipart>=0.0.6",
    "sse-starlette>=1.8.2",
    "python-dotenv>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/Codex2API"
Documentation = "https://github.com/your-username/Codex2API#readme"
Repository = "https://github.com/your-username/Codex2API"
Issues = "https://github.com/your-username/Codex2API/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "requests>=2.31.0",
]


[project.scripts]
codex2api = "codex2api.main:main"

[tool.hatch.version]
path = "src/codex2api/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/codex2api"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"

